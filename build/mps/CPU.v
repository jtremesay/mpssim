/* Generated by Yosys 0.23 (git sha1 7ce5011c24b, gcc 11.3.0 -fPIC -Os) */

(* hdlname = "\\ALU" *)
(* src = "rtl/mps/ALU.v:1.1-9.10" *)
module ALU(z, zero, a, b, mode);
  (* src = "rtl/mps/ALU.v:4.18-4.19" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "rtl/mps/ALU.v:4.21-4.22" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "rtl/mps/ALU.v:5.17-5.21" *)
  input [3:0] mode;
  wire [3:0] mode;
  (* src = "rtl/mps/ALU.v:2.19-2.20" *)
  output [31:0] z;
  wire [31:0] z;
  (* src = "rtl/mps/ALU.v:3.12-3.16" *)
  output zero;
  wire zero;
  assign z = a + (* src = "rtl/mps/ALU.v:7.16-7.21" *) b;
  assign zero = ! (* src = "rtl/mps/ALU.v:8.19-8.25" *) z;
endmodule

(* hdlname = "\\ALUControl" *)
(* src = "rtl/mps/ALUControl.v:1.1-7.10" *)
module ALUControl(mode, op, func);
  (* src = "rtl/mps/ALUControl.v:4.17-4.21" *)
  input [5:0] func;
  wire [5:0] func;
  (* src = "rtl/mps/ALUControl.v:2.18-2.22" *)
  output [3:0] mode;
  wire [3:0] mode;
  (* src = "rtl/mps/ALUControl.v:3.11-3.13" *)
  input op;
  wire op;
  assign mode = 4'h0;
endmodule

(* hdlname = "\\CPU" *)
(* top =  1  *)
(* src = "rtl/mps/CPU.v:1.1-99.10" *)
module CPU(instr, pc, rval, wval, addr, write, clock, nreset);
  (* src = "rtl/mps/CPU.v:98.40-98.57" *)
  wire _00_;
  (* src = "rtl/mps/CPU.v:56.16-56.41" *)
  wire [4:0] _01_;
  (* src = "rtl/mps/CPU.v:83.12-83.33" *)
  wire [31:0] _02_;
  (* src = "rtl/mps/CPU.v:98.39-98.79" *)
  wire [31:0] _03_;
  (* src = "rtl/mps/CPU.v:5.25-5.29" *)
  output [31:0] addr;
  wire [31:0] addr;
  (* src = "rtl/mps/CPU.v:69.16-69.24" *)
  wire [3:0] alu_mode;
  (* src = "rtl/mps/CPU.v:36.16-36.22" *)
  wire alu_op;
  (* src = "rtl/mps/CPU.v:35.58-35.65" *)
  wire alu_sel;
  (* src = "rtl/mps/CPU.v:77.17-77.22" *)
  wire [31:0] alu_z;
  (* src = "rtl/mps/CPU.v:78.10-78.18" *)
  wire alu_zero;
  (* src = "rtl/mps/CPU.v:35.27-35.33" *)
  wire branch;
  (* src = "rtl/mps/CPU.v:7.11-7.16" *)
  input clock;
  wire clock;
  (* src = "rtl/mps/CPU.v:50.23-50.24" *)
  wire [31:0] d;
  (* src = "rtl/mps/CPU.v:22.16-22.20" *)
  wire [5:0] func;
  (* src = "rtl/mps/CPU.v:20.17-20.20" *)
  wire [15:0] imm;
  (* src = "rtl/mps/CPU.v:62.17-62.24" *)
  wire [31:0] imm_ext;
  (* src = "rtl/mps/CPU.v:2.18-2.23" *)
  input [31:0] instr;
  wire [31:0] instr;
  (* src = "rtl/mps/CPU.v:35.21-35.25" *)
  wire jump;
  (* src = "rtl/mps/CPU.v:21.17-21.26" *)
  (* unused_bits = "24 25" *)
  wire [25:0] jump_addr;
  (* src = "rtl/mps/CPU.v:35.35-35.45" *)
  wire mem_to_reg;
  (* src = "rtl/mps/CPU.v:10.17-10.24" *)
  wire [31:0] next_pc;
  (* src = "rtl/mps/CPU.v:7.18-7.24" *)
  input nreset;
  wire nreset;
  (* src = "rtl/mps/CPU.v:22.22-22.24" *)
  wire [5:0] op;
  (* src = "rtl/mps/CPU.v:3.19-3.21" *)
  output [31:0] pc;
  wire [31:0] pc;
  (* src = "rtl/mps/CPU.v:97.17-97.26" *)
  wire [31:0] pc_branch;
  (* src = "rtl/mps/CPU.v:95.17-95.23" *)
  wire [31:0] pc_inc;
  wire [29:0] pc_jump;
  (* src = "rtl/mps/CPU.v:19.30-19.35" *)
  wire [4:0] reg_d;
  (* src = "rtl/mps/CPU.v:35.10-35.19" *)
  wire reg_d_sel;
  (* src = "rtl/mps/CPU.v:19.16-19.21" *)
  wire [4:0] reg_s;
  (* src = "rtl/mps/CPU.v:19.23-19.28" *)
  wire [4:0] reg_t;
  (* src = "rtl/mps/CPU.v:35.67-35.76" *)
  wire reg_write;
  (* src = "rtl/mps/CPU.v:4.18-4.22" *)
  input [31:0] rval;
  wire [31:0] rval;
  (* src = "rtl/mps/CPU.v:50.17-50.18" *)
  wire [31:0] s;
  (* src = "rtl/mps/CPU.v:50.20-50.21" *)
  wire [31:0] t;
  (* src = "rtl/mps/CPU.v:6.12-6.17" *)
  output write;
  wire write;
  (* src = "rtl/mps/CPU.v:5.19-5.23" *)
  output [31:0] wval;
  wire [31:0] wval;
  assign pc_inc = pc + (* src = "rtl/mps/CPU.v:95.26-95.32" *) 3'h4;
  assign pc_branch = pc_inc + (* src = "rtl/mps/CPU.v:97.29-97.52" *) { imm_ext[29:0], 2'h0 };
  assign _00_ = branch & (* src = "rtl/mps/CPU.v:98.40-98.57" *) alu_zero;
  assign _01_ = reg_d_sel ? (* src = "rtl/mps/CPU.v:56.16-56.41" *) reg_d : reg_t;
  assign _02_ = alu_sel ? (* src = "rtl/mps/CPU.v:83.12-83.33" *) imm_ext : t;
  assign d = mem_to_reg ? (* src = "rtl/mps/CPU.v:92.16-92.41" *) rval : alu_z;
  assign next_pc = jump ? (* src = "rtl/mps/CPU.v:98.22-98.79" *) { 2'h0, pc[31:28], jump_addr[23:0], 2'h0 } : _03_;
  assign _03_ = _00_ ? (* src = "rtl/mps/CPU.v:98.39-98.79" *) pc_branch : pc_inc;
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:79.9-85.6" *)
  ALU alu (
    .a(s),
    .b(_02_),
    .mode(alu_mode),
    .z(alu_z),
    .zero(alu_zero)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:70.16-74.6" *)
  ALUControl c_aluctrl (
    .func(func),
    .mode(alu_mode),
    .op(alu_op)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:37.13-47.6" *)
  Control c_ctrl (
    .alu_op(alu_op),
    .alu_sel(alu_sel),
    .branch(branch),
    .jump(jump),
    .mem_to_reg(mem_to_reg),
    .mem_write(write),
    .op(op),
    .reg_d_sel(reg_d_sel),
    .reg_write(reg_write)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:23.24-32.6" *)
  InstructionDecoder c_id (
    .func(func),
    .imm(imm),
    .instr(instr),
    .jump_addr(jump_addr),
    .op(op),
    .reg_d(reg_d),
    .reg_s(reg_s),
    .reg_t(reg_t)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:11.20-16.6" *)
  ProgramCounter c_pc (
    .clock(clock),
    .next_pc(next_pc),
    .nreset(nreset),
    .pc(pc)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:51.18-59.6" *)
  RegisterFile c_regfile (
    .d(d),
    .reg_d(_01_),
    .reg_s(reg_s),
    .reg_t(reg_t),
    .reg_write(reg_write),
    .s(s),
    .t(t)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/mps/CPU.v:63.18-66.6" *)
  SignExtender c_se (
    .imm(imm),
    .imm_ext(imm_ext)
  );
  assign addr = alu_z;
  assign pc_jump = { pc[31:28], jump_addr[23:0], 2'h0 };
  assign wval = t;
endmodule

(* hdlname = "\\Control" *)
(* src = "rtl/mps/Control.v:3.1-9.10" *)
module Control(reg_d_sel, jump, branch, mem_to_reg, mem_write, alu_sel, reg_write, alu_op, op);
  (* src = "rtl/mps/Control.v:5.18-5.24" *)
  output alu_op;
  wire alu_op;
  (* src = "rtl/mps/Control.v:4.60-4.67" *)
  output alu_sel;
  wire alu_sel;
  (* src = "rtl/mps/Control.v:4.29-4.35" *)
  output branch;
  wire branch;
  (* src = "rtl/mps/Control.v:4.23-4.27" *)
  output jump;
  wire jump;
  (* src = "rtl/mps/Control.v:4.37-4.47" *)
  output mem_to_reg;
  wire mem_to_reg;
  (* src = "rtl/mps/Control.v:4.49-4.58" *)
  output mem_write;
  wire mem_write;
  (* src = "rtl/mps/Control.v:6.17-6.19" *)
  input [5:0] op;
  wire [5:0] op;
  (* src = "rtl/mps/Control.v:4.12-4.21" *)
  output reg_d_sel;
  wire reg_d_sel;
  (* src = "rtl/mps/Control.v:4.69-4.78" *)
  output reg_write;
  wire reg_write;
  assign jump = 1'h0;
endmodule

(* hdlname = "\\InstructionDecoder" *)
(* src = "rtl/mps/InstructionDecoder.v:1.1-15.10" *)
module InstructionDecoder(op, func, reg_s, reg_t, reg_d, imm, jump_addr, instr);
  (* src = "rtl/mps/InstructionDecoder.v:2.22-2.26" *)
  output [5:0] func;
  wire [5:0] func;
  (* src = "rtl/mps/InstructionDecoder.v:4.19-4.22" *)
  output [15:0] imm;
  wire [15:0] imm;
  (* src = "rtl/mps/InstructionDecoder.v:6.18-6.23" *)
  input [31:0] instr;
  wire [31:0] instr;
  (* src = "rtl/mps/InstructionDecoder.v:5.19-5.28" *)
  output [25:0] jump_addr;
  wire [25:0] jump_addr;
  (* src = "rtl/mps/InstructionDecoder.v:2.18-2.20" *)
  output [5:0] op;
  wire [5:0] op;
  (* src = "rtl/mps/InstructionDecoder.v:3.32-3.37" *)
  output [4:0] reg_d;
  wire [4:0] reg_d;
  (* src = "rtl/mps/InstructionDecoder.v:3.18-3.23" *)
  output [4:0] reg_s;
  wire [4:0] reg_s;
  (* src = "rtl/mps/InstructionDecoder.v:3.25-3.30" *)
  output [4:0] reg_t;
  wire [4:0] reg_t;
  assign func = instr[5:0];
  assign imm = instr[15:0];
  assign jump_addr = instr[25:0];
  assign op = instr[31:26];
  assign reg_d = instr[15:11];
  assign reg_s = instr[25:21];
  assign reg_t = instr[20:16];
endmodule

(* hdlname = "\\ProgramCounter" *)
(* src = "rtl/mps/ProgramCounter.v:1.1-13.10" *)
module ProgramCounter(pc, next_pc, clock, nreset);
  (* src = "rtl/mps/ProgramCounter.v:4.11-4.16" *)
  input clock;
  wire clock;
  (* src = "rtl/mps/ProgramCounter.v:3.18-3.25" *)
  input [31:0] next_pc;
  wire [31:0] next_pc;
  (* src = "rtl/mps/ProgramCounter.v:4.18-4.24" *)
  input nreset;
  wire nreset;
  (* src = "rtl/mps/ProgramCounter.v:2.23-2.25" *)
  output [31:0] pc;
  reg [31:0] pc;
  (* src = "rtl/mps/ProgramCounter.v:6.5-12.8" *)
  always @(posedge clock, negedge nreset)
    if (!nreset) pc <= 32'd0;
    else pc <= next_pc;
endmodule

(* hdlname = "\\RegisterFile" *)
(* src = "rtl/mps/RegisterFile.v:1.1-15.10" *)
module RegisterFile(s, t, reg_s, reg_t, reg_d, d, reg_write);
  (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *)
  wire [31:0] _000_;
  (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *)
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  (* src = "rtl/mps/RegisterFile.v:8.16-8.26" *)
  wire _096_;
  (* src = "rtl/mps/RegisterFile.v:9.16-9.26" *)
  wire _097_;
  (* src = "rtl/mps/RegisterFile.v:11.26-11.35" *)
  wire _098_;
  (* src = "rtl/mps/RegisterFile.v:11.13-11.35" *)
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  (* src = "rtl/mps/RegisterFile.v:4.18-4.19" *)
  input [31:0] d;
  wire [31:0] d;
  (* src = "rtl/mps/RegisterFile.v:3.31-3.36" *)
  input [4:0] reg_d;
  wire [4:0] reg_d;
  (* src = "rtl/mps/RegisterFile.v:3.17-3.22" *)
  input [4:0] reg_s;
  wire [4:0] reg_s;
  (* src = "rtl/mps/RegisterFile.v:3.24-3.29" *)
  input [4:0] reg_t;
  wire [4:0] reg_t;
  (* src = "rtl/mps/RegisterFile.v:5.11-5.20" *)
  input reg_write;
  wire reg_write;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[10] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[11] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[12] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[13] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[14] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[15] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[16] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[17] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[18] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[19] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[1] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[20] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[21] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[22] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[23] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[24] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[25] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[26] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[27] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[28] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[29] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[2] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[30] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[31] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[3] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[4] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[5] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[6] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[7] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[8] ;
  (* src = "rtl/mps/RegisterFile.v:7.16-7.25" *)
  reg [31:0] \registers[9] ;
  (* src = "rtl/mps/RegisterFile.v:2.19-2.20" *)
  output [31:0] s;
  wire [31:0] s;
  (* src = "rtl/mps/RegisterFile.v:2.22-2.23" *)
  output [31:0] t;
  wire [31:0] t;
  assign _002_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _117_;
  assign _003_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _116_;
  assign _004_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _115_;
  assign _005_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _114_;
  assign _006_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _113_;
  assign _007_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _112_;
  assign _008_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _111_;
  assign _009_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _110_;
  assign _010_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _109_;
  assign _011_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _108_;
  assign _012_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _107_;
  assign _013_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _106_;
  assign _014_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _105_;
  assign _015_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _104_;
  assign _016_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _103_;
  assign _017_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _102_;
  assign _018_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _101_;
  assign _019_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _100_;
  assign _020_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _099_;
  assign _021_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _164_;
  assign _022_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _160_;
  assign _023_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _157_;
  assign _024_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _153_;
  assign _025_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _149_;
  assign _026_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _144_;
  assign _027_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _140_;
  assign _028_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _137_;
  assign _029_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _133_;
  assign _030_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _129_;
  assign _031_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _125_;
  assign _032_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _122_;
  assign _033_ = ~ (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _119_;
  assign _034_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _065_, _020_ };
  assign _035_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _066_, _020_ };
  assign _036_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _067_, _020_ };
  assign _037_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _068_, _020_ };
  assign _038_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _069_, _020_ };
  assign _039_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _070_, _020_ };
  assign _040_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _071_, _020_ };
  assign _041_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _072_, _020_ };
  assign _042_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _073_, _020_ };
  assign _043_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _074_, _020_ };
  assign _044_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _075_, _020_ };
  assign _045_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _076_, _020_ };
  assign _046_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _077_, _020_ };
  assign _047_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _078_, _020_ };
  assign _048_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _079_, _020_ };
  assign _049_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _080_, _020_ };
  assign _050_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _081_, _020_ };
  assign _051_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _082_, _020_ };
  assign _052_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _083_, _020_ };
  assign _053_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _084_, _020_ };
  assign _054_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _085_, _020_ };
  assign _055_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _086_, _020_ };
  assign _056_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _087_, _020_ };
  assign _057_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _088_, _020_ };
  assign _058_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _089_, _020_ };
  assign _059_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _090_, _020_ };
  assign _060_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _091_, _020_ };
  assign _061_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _092_, _020_ };
  assign _062_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _093_, _020_ };
  assign _063_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _094_, _020_ };
  assign _064_ = | (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) { _095_, _020_ };
  assign _065_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _033_;
  assign _066_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _002_;
  assign _067_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _003_;
  assign _068_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _004_;
  assign _069_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _005_;
  assign _070_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _006_;
  assign _071_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _007_;
  assign _072_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _008_;
  assign _073_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _009_;
  assign _074_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _010_;
  assign _075_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _011_;
  assign _076_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _012_;
  assign _077_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _013_;
  assign _078_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _014_;
  assign _079_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _015_;
  assign _080_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _016_;
  assign _081_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _017_;
  assign _082_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _018_;
  assign _083_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _019_;
  assign _084_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _021_;
  assign _085_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _022_;
  assign _086_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _023_;
  assign _087_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _024_;
  assign _088_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _025_;
  assign _089_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _026_;
  assign _090_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _027_;
  assign _091_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _028_;
  assign _092_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _029_;
  assign _093_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _030_;
  assign _094_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _031_;
  assign _095_ = _099_ & (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *) _032_;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_034_) \registers[13]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_035_) \registers[14]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_036_) \registers[15]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_037_) \registers[16]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_038_) \registers[17]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_039_) \registers[18]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_040_) \registers[19]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_041_) \registers[20]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_042_) \registers[21]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_043_) \registers[22]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_044_) \registers[23]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_045_) \registers[24]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_046_) \registers[25]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_047_) \registers[26]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_048_) \registers[27]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_049_) \registers[28]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_050_) \registers[29]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_051_) \registers[30]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_052_) \registers[31]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_053_) \registers[1]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_054_) \registers[2]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_055_) \registers[3]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_056_) \registers[4]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_057_) \registers[5]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_058_) \registers[6]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_059_) \registers[7]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_060_) \registers[8]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_061_) \registers[9]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_062_) \registers[10]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_063_) \registers[11]  = d;
  (* src = "rtl/mps/RegisterFile.v:10.5-14.8" *)
  always @*
    if (!_064_) \registers[12]  = d;
  assign _096_ = ! (* src = "rtl/mps/RegisterFile.v:8.16-8.26" *) reg_s;
  assign _097_ = ! (* src = "rtl/mps/RegisterFile.v:9.16-9.26" *) reg_t;
  assign _098_ = reg_d > (* src = "rtl/mps/RegisterFile.v:11.26-11.35" *) 1'h0;
  assign _099_ = reg_write && (* src = "rtl/mps/RegisterFile.v:11.13-11.35" *) _098_;
  assign _100_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1f;
  assign _101_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1e;
  assign _102_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1d;
  assign _103_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1c;
  assign _104_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1b;
  assign _105_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1a;
  assign _106_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h19;
  assign _107_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h18;
  assign _108_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h17;
  assign _109_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h16;
  assign _110_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h15;
  assign _111_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h14;
  assign _112_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h13;
  assign _113_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h12;
  assign _114_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h11;
  assign _115_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h10;
  assign _116_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hf;
  assign _117_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'he;
  function [31:0] _340_;
    input [31:0] a;
    input [991:0] b;
    input [30:0] s;
    (* full_case = 32'd1 *)
    (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *)
    (* parallel_case *)
    casez (s)
      31'b??????????????????????????????1:
        _340_ = b[31:0];
      31'b?????????????????????????????1?:
        _340_ = b[63:32];
      31'b????????????????????????????1??:
        _340_ = b[95:64];
      31'b???????????????????????????1???:
        _340_ = b[127:96];
      31'b??????????????????????????1????:
        _340_ = b[159:128];
      31'b?????????????????????????1?????:
        _340_ = b[191:160];
      31'b????????????????????????1??????:
        _340_ = b[223:192];
      31'b???????????????????????1???????:
        _340_ = b[255:224];
      31'b??????????????????????1????????:
        _340_ = b[287:256];
      31'b?????????????????????1?????????:
        _340_ = b[319:288];
      31'b????????????????????1??????????:
        _340_ = b[351:320];
      31'b???????????????????1???????????:
        _340_ = b[383:352];
      31'b??????????????????1????????????:
        _340_ = b[415:384];
      31'b?????????????????1?????????????:
        _340_ = b[447:416];
      31'b????????????????1??????????????:
        _340_ = b[479:448];
      31'b???????????????1???????????????:
        _340_ = b[511:480];
      31'b??????????????1????????????????:
        _340_ = b[543:512];
      31'b?????????????1?????????????????:
        _340_ = b[575:544];
      31'b????????????1??????????????????:
        _340_ = b[607:576];
      31'b???????????1???????????????????:
        _340_ = b[639:608];
      31'b??????????1????????????????????:
        _340_ = b[671:640];
      31'b?????????1?????????????????????:
        _340_ = b[703:672];
      31'b????????1??????????????????????:
        _340_ = b[735:704];
      31'b???????1???????????????????????:
        _340_ = b[767:736];
      31'b??????1????????????????????????:
        _340_ = b[799:768];
      31'b?????1?????????????????????????:
        _340_ = b[831:800];
      31'b????1??????????????????????????:
        _340_ = b[863:832];
      31'b???1???????????????????????????:
        _340_ = b[895:864];
      31'b??1????????????????????????????:
        _340_ = b[927:896];
      31'b?1?????????????????????????????:
        _340_ = b[959:928];
      31'b1??????????????????????????????:
        _340_ = b[991:960];
      default:
        _340_ = a;
    endcase
  endfunction
  assign _001_ = _340_(32'hxxxxxxxx, { \registers[1] , \registers[2] , \registers[3] , \registers[4] , \registers[5] , \registers[6] , \registers[7] , \registers[8] , \registers[9] , \registers[10] , \registers[11] , \registers[12] , \registers[13] , \registers[14] , \registers[15] , \registers[16] , \registers[17] , \registers[18] , \registers[19] , \registers[20] , \registers[21] , \registers[22] , \registers[23] , \registers[24] , \registers[25] , \registers[26] , \registers[27] , \registers[28] , \registers[29] , \registers[30] , \registers[31]  }, { _159_, _158_, _156_, _155_, _154_, _152_, _151_, _150_, _148_, _147_, _146_, _145_, _143_, _142_, _141_, _139_, _138_, _136_, _135_, _134_, _132_, _131_, _130_, _128_, _127_, _126_, _124_, _123_, _121_, _120_, _118_ });
  assign _118_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1f;
  assign _119_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hd;
  assign _120_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1e;
  assign _121_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1d;
  assign _122_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hc;
  assign _123_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1c;
  assign _124_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1b;
  assign _125_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hb;
  assign _126_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1a;
  assign _127_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h19;
  assign _128_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h18;
  assign _129_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'ha;
  assign _130_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h17;
  assign _131_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h16;
  assign _132_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h15;
  assign _133_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h9;
  assign _134_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h14;
  assign _135_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h13;
  assign _136_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h12;
  assign _137_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h8;
  assign _138_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h11;
  assign _139_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h10;
  assign _140_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h7;
  assign _141_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hf;
  assign _142_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'he;
  assign _143_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hd;
  assign _144_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h6;
  assign _145_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hc;
  assign _146_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hb;
  assign _147_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'ha;
  assign _148_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h9;
  assign _149_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h5;
  assign _150_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h8;
  assign _151_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h7;
  assign _152_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h6;
  assign _153_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h4;
  assign _154_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h5;
  assign _155_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h4;
  assign _156_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h3;
  assign _157_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h3;
  assign _158_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h2;
  assign _159_ = reg_t == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 1'h1;
  function [31:0] _383_;
    input [31:0] a;
    input [991:0] b;
    input [30:0] s;
    (* full_case = 32'd1 *)
    (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *)
    (* parallel_case *)
    casez (s)
      31'b??????????????????????????????1:
        _383_ = b[31:0];
      31'b?????????????????????????????1?:
        _383_ = b[63:32];
      31'b????????????????????????????1??:
        _383_ = b[95:64];
      31'b???????????????????????????1???:
        _383_ = b[127:96];
      31'b??????????????????????????1????:
        _383_ = b[159:128];
      31'b?????????????????????????1?????:
        _383_ = b[191:160];
      31'b????????????????????????1??????:
        _383_ = b[223:192];
      31'b???????????????????????1???????:
        _383_ = b[255:224];
      31'b??????????????????????1????????:
        _383_ = b[287:256];
      31'b?????????????????????1?????????:
        _383_ = b[319:288];
      31'b????????????????????1??????????:
        _383_ = b[351:320];
      31'b???????????????????1???????????:
        _383_ = b[383:352];
      31'b??????????????????1????????????:
        _383_ = b[415:384];
      31'b?????????????????1?????????????:
        _383_ = b[447:416];
      31'b????????????????1??????????????:
        _383_ = b[479:448];
      31'b???????????????1???????????????:
        _383_ = b[511:480];
      31'b??????????????1????????????????:
        _383_ = b[543:512];
      31'b?????????????1?????????????????:
        _383_ = b[575:544];
      31'b????????????1??????????????????:
        _383_ = b[607:576];
      31'b???????????1???????????????????:
        _383_ = b[639:608];
      31'b??????????1????????????????????:
        _383_ = b[671:640];
      31'b?????????1?????????????????????:
        _383_ = b[703:672];
      31'b????????1??????????????????????:
        _383_ = b[735:704];
      31'b???????1???????????????????????:
        _383_ = b[767:736];
      31'b??????1????????????????????????:
        _383_ = b[799:768];
      31'b?????1?????????????????????????:
        _383_ = b[831:800];
      31'b????1??????????????????????????:
        _383_ = b[863:832];
      31'b???1???????????????????????????:
        _383_ = b[895:864];
      31'b??1????????????????????????????:
        _383_ = b[927:896];
      31'b?1?????????????????????????????:
        _383_ = b[959:928];
      31'b1??????????????????????????????:
        _383_ = b[991:960];
      default:
        _383_ = a;
    endcase
  endfunction
  assign _000_ = _383_(32'hxxxxxxxx, { \registers[1] , \registers[2] , \registers[3] , \registers[4] , \registers[5] , \registers[6] , \registers[7] , \registers[8] , \registers[9] , \registers[10] , \registers[11] , \registers[12] , \registers[13] , \registers[14] , \registers[15] , \registers[16] , \registers[17] , \registers[18] , \registers[19] , \registers[20] , \registers[21] , \registers[22] , \registers[23] , \registers[24] , \registers[25] , \registers[26] , \registers[27] , \registers[28] , \registers[29] , \registers[30] , \registers[31]  }, { _192_, _191_, _190_, _189_, _188_, _187_, _186_, _185_, _184_, _183_, _182_, _181_, _180_, _179_, _178_, _177_, _176_, _175_, _174_, _173_, _172_, _171_, _170_, _169_, _168_, _167_, _166_, _165_, _163_, _162_, _161_ });
  assign _160_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h2;
  assign _161_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1f;
  assign _162_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1e;
  assign _163_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1d;
  assign _164_ = reg_d == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 1'h1;
  assign _165_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1c;
  assign _166_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1b;
  assign _167_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h1a;
  assign _168_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h19;
  assign _169_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h18;
  assign _170_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h17;
  assign _171_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h16;
  assign _172_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h15;
  assign _173_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h14;
  assign _174_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h13;
  assign _175_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h12;
  assign _176_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h11;
  assign _177_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 5'h10;
  assign _178_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hf;
  assign _179_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'he;
  assign _180_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hd;
  assign _181_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hc;
  assign _182_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'hb;
  assign _183_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'ha;
  assign _184_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h9;
  assign _185_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 4'h8;
  assign _186_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h7;
  assign _187_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h6;
  assign _188_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h5;
  assign _189_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 3'h4;
  assign _190_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h3;
  assign _191_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 2'h2;
  assign _192_ = reg_s == (* full_case = 32'd1 *) (* src = "rtl/mps/RegisterFile.v:0.0-0.0" *) 1'h1;
  assign s = _096_ ? (* src = "rtl/mps/RegisterFile.v:8.16-8.49" *) 32'd0 : _000_;
  assign t = _097_ ? (* src = "rtl/mps/RegisterFile.v:9.16-9.49" *) 32'd0 : _001_;
endmodule

(* hdlname = "\\SignExtender" *)
(* src = "rtl/mps/SignExtender.v:1.1-6.10" *)
module SignExtender(imm_ext, imm);
  (* src = "rtl/mps/SignExtender.v:3.18-3.21" *)
  input [15:0] imm;
  wire [15:0] imm;
  (* src = "rtl/mps/SignExtender.v:2.19-2.26" *)
  output [31:0] imm_ext;
  wire [31:0] imm_ext;
  assign imm_ext = { imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm[15], imm };
endmodule
