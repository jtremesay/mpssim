/* Generated by Yosys 0.23 (git sha1 7ce5011c24b, gcc 11.3.0 -fPIC -Os) */

(* hdlname = "\\InstructionDecoder" *)
(* top =  1  *)
(* src = "rtl/mps/InstructionDecoder.v:1.1-15.10" *)
module InstructionDecoder(op, func, reg_s, reg_t, reg_d, imm, jump_addr, instr);
  (* src = "rtl/mps/InstructionDecoder.v:2.22-2.26" *)
  output [5:0] func;
  wire [5:0] func;
  (* src = "rtl/mps/InstructionDecoder.v:4.19-4.22" *)
  output [15:0] imm;
  wire [15:0] imm;
  (* src = "rtl/mps/InstructionDecoder.v:6.18-6.23" *)
  input [31:0] instr;
  wire [31:0] instr;
  (* src = "rtl/mps/InstructionDecoder.v:5.19-5.28" *)
  output [25:0] jump_addr;
  wire [25:0] jump_addr;
  (* src = "rtl/mps/InstructionDecoder.v:2.18-2.20" *)
  output [5:0] op;
  wire [5:0] op;
  (* src = "rtl/mps/InstructionDecoder.v:3.32-3.37" *)
  output [4:0] reg_d;
  wire [4:0] reg_d;
  (* src = "rtl/mps/InstructionDecoder.v:3.18-3.23" *)
  output [4:0] reg_s;
  wire [4:0] reg_s;
  (* src = "rtl/mps/InstructionDecoder.v:3.25-3.30" *)
  output [4:0] reg_t;
  wire [4:0] reg_t;
  assign func = instr[5:0];
  assign imm = instr[15:0];
  assign jump_addr = instr[25:0];
  assign op = instr[31:26];
  assign reg_d = instr[15:11];
  assign reg_s = instr[25:21];
  assign reg_t = instr[20:16];
endmodule
